<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jaxws="http://cxf.apache.org/jaxws"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd 
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd
    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
    http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws-4.2.xsd" default-autowire="byName">
	
	<!-- 激活@Controller模式 -->
    <context:component-scan base-package="com.ledao.elite.manager.controller" />
    <mvc:annotation-driven validator="validator" conversion-service="conversion-service">
	    <mvc:message-converters>
		    <bean class="org.springframework.http.converter.StringHttpMessageConverter">
		      <property name="supportedMediaTypes" value = "text/plain;charset=UTF-8" />
		    </bean>
		    <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		      <property name="supportedMediaTypes" value = "text/plain;charset=UTF-8" />
		    </bean>
	    </mvc:message-converters>
    </mvc:annotation-driven>
    <aop:aspectj-autoproxy/>
    
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass"  value="org.hibernate.validator.HibernateValidator"/>
        <!--不设置则默认为classpath下的 ValidationMessages.properties -->
        <property name="validationMessageSource" ref="validatemessageSource"/>
    </bean>
    <bean id="conversion-service" class="org.springframework.format.support.FormattingConversionServiceFactoryBean" />
    <bean id="validatemessageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">  
        <property name="basename" value="classpath:/i18n/validator"/>  
        <property name="fileEncodings" value="utf-8"/>  
        <property name="cacheSeconds" value="120"/>  
    </bean>

    <!-- 配置Handler 拦截机 -->
	<mvc:interceptors>
		<ref bean="openSessionInViewInterceptor"/>
		<ref bean="accessInterceptor" />
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />
	</mvc:interceptors>
	
	<mvc:resources mapping="/res/**" location="/res/" />
	<mvc:resources mapping="/inc/**" location="/inc/" />
    
    <!-- 使用容器的默认servlet配置处理静态资源 -->
	<mvc:default-servlet-handler />
	
	
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>
	<!-- 基于注解配置事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean id="openSessionInViewInterceptor"
		class="org.springframework.orm.hibernate5.support.OpenSessionInViewInterceptor">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

</beans>